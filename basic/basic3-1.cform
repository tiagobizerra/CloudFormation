{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description" : "Custom template - exercises from MyTraining",
  "Mappings" : {
    "NatRegionMap" : {
      "us-east-1"      : { "AMI" : "ami-08111162" },
      "us-west-1"      : { "AMI" : "ami-1b0f7d7b" },
      "us-west-2"      : { "AMI" : "ami-c229c0a2" },
      "eu-west-1"      : { "AMI" : "ami-31328842" },
      "eu-central-1"   : { "AMI" : "ami-e2df388d" },
      "sa-east-1"      : { "AMI" : "ami-1e159872" },
      "ap-southeast-1" : { "AMI" : "ami-e90dc68a" },
      "ap-southeast-2" : { "AMI" : "ami-f2210191" },
      "ap-northeast-2" : { "AMI" : "ami-6598510b" },
      "cn-north-1"     : { "AMI" : "ami-49e22924" },
      "ap-northeast-1" : { "AMI" : "ami-27d6e626" }
    }
  },
  "Parameters" : {
   "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the web server",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
   "ServerAccess" : {
      "Description" : "CIDR IP range allowed to login to the NAT instance",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    },
    "LoadBalancerPort" : {
      "Description" : "Port number for the LoadBalancer",
      "Type": "String",
      "MinLength" : "1",
      "MaxLength" : "5",
      "AllowedPattern" : "[0-9]*",
      "ConstraintDescription" : "Can contain only numbers"
    },
    "SecurityGroupId" : {
      "Description" : "Security group that will be used to create instances",
      "Type" : "AWS::EC2::SecurityGroup::Id"
    }
  },
  "Resources" : {
    "MyASG" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "DesiredCapacity" : "2",
        "HealthCheckType" : "EC2",
        "LaunchConfigurationName" : { "Ref" : "MyLC" },
        "LoadBalancerNames" : [ { "Ref" : "MyELB" } ],
        "MinSize" : "1",
        "MaxSize" : "3",
        "MetricsCollection" : [ { "Granularity" : "1Minute"  } ]
      },
      "CreationPolicy" : {
        "ResourceSignal" : {
        "Timeout" : "PT15M",
        "Count" : "1"
        }
      },
      "UpdatePolicy" : {
       "AutoScalingRollingUpdate" : {
          "MinInstancesInService" : "1",
          "MaxBatchSize" : "1",
          "PauseTime" : "PT15M",
          "WaitOnResourceSignals" : "true"
        }
      }
    },
    "MyLC" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "Install" : [ "Install", "Files", "Services" ]
          },
          "Install" : {
            "packages" : {
              "yum" : {
                "httpd" : [],
                "php" : []
              }
            }
          },
          "Files" : { 
              "files" : {
              "/var/www/html/index.php" : {
                "content" : { "Fn::Join" : [ "", [
                "<?php\n",
                "phpinfo();\n",
                "?>\n"
                ]]
                },
              "mode" : "000600",
              "owner" : "apache",
              "group" : "apache"
              }
            }
          },
          "Services" : {
            "services" : {
              "sysvinit" : {
                "httpd" : { "enabled" : "true", "ensureRunning" : "true" }
              }
            }
          }
        }
      },
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "NatRegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "SecurityGroups" : [ { "Ref" : "SecurityGroupId" } ],
        "InstanceType" : "t2.micro",
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash -xe\n",
             "exec &> /tmp/userdata.log\n\n",
             "yum update -y aws-cfn-bootstrap\n",
             "# Install the files and packages from the metadata\n",
             "/opt/aws/bin/cfn-init -v ",
             "         --stack ", { "Ref" : "AWS::StackName" },
             "         --resource MyLC ",
             "         --configsets Install ",
             "         --region ", { "Ref" : "AWS::Region" }, "\n",
             "/opt/aws/bin/cfn-signal -e $? ",
             "         --stack ", { "Ref" : "AWS::StackName" },
             "         --resource MyASG ",
             "         --region ", { "Ref" : "AWS::Region" }, "\n"
            ]]}}
      }
    },
    "MyScaleUpPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "MyASG"},
        "Cooldown" : "60",
        "ScalingAdjustment" : "1"
      }
    },
    "MyScaleDownPolicy": {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "MyASG"},
        "Cooldown" : "60",
        "ScalingAdjustment" : "-1"
      }
    },
    "CPUAlarmHigh" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Scale-up if CPU > 90% for 3 minutes",
        "MetricName" : "CPUUtilization",
        "Namespace" : "AWS/EC2",
        "Statistic" : "Average",
        "Period" : "180",
        "EvaluationPeriods" : "2",
        "Threshold" : "90",
        "AlarmActions" : [ { "Ref" : "MyScaleUpPolicy" } ],
        "Dimensions" : [
          {
            "Name" : "AutoScalingGroupName",
            "Value" : { "Ref" : "MyASG" }
          }
        ],
        "ComparisonOperator" : "GreaterThanThreshold"
      }
    },
    "CPUAlarmLow" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Scale-down if CPU < 70% for 3 minutes",
        "MetricName" : "CPUUtilization",
        "Namespace" : "AWS/EC2",
        "Statistic" : "Average",
        "Period" : "180",
        "EvaluationPeriods" : "2",
        "Threshold" : "70",
        "AlarmActions" : [ { "Ref" : "MyScaleDownPolicy" } ],
        "Dimensions" : [
          {
            "Name" : "AutoScalingGroupName",
            "Value" : { "Ref" : "MyASG" }
          }
        ],
        "ComparisonOperator" : "LessThanThreshold"
      }
    },
    "MyELB" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Listeners" : [ {
          "InstancePort" : { "Ref" : "LoadBalancerPort"},
          "InstanceProtocol" : "HTTP",
          "LoadBalancerPort" : { "Ref" : "LoadBalancerPort"},
          "Protocol" : "HTTP"
        } ],
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "Tags" : [ { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } } ]
      }
    }
  },
  "Outputs" : {
    "MyELBId" : {
      "Description" : "The ELB DNS",
      "Value" : { "Fn::GetAtt" : [ "MyELB", "DNSName" ] }
    }
  } 
}
